port module Deezer exposing
    ( addSongsToPlaylist
    , connectDeezer
    , createPlaylist
    , disconnectDeezer
    , getPlaylistTracks
    , getPlaylists
    , getUserInfo
    , importPlaylist
    , searchTrack
    )

import Basics.Either as Either exposing (Either(..))
import Basics.Extra exposing (flip)
import Dict
import Http exposing (Error(..), Response)
import Json.Decode as Decode exposing (Decoder, bool, int, list, map, string, succeed)
import Json.Decode.Pipeline as Decode exposing (custom, hardcoded, required, requiredAt)
import Json.Encode as JE
import Model exposing (UserInfo)
import Playlist exposing (Playlist, PlaylistId)
import Process
import RemoteData exposing (RemoteData(..), WebData)
import RemoteData.Http as Http exposing (Config, defaultConfig)
import Task exposing (Task)
import Track exposing (Track)
import Tuple exposing (pair)


getUserInfo : String -> Task Never (WebData UserInfo)
getUserInfo token =
    UserInfo "1" "Test User"
        |> Success
        |> Task.succeed


searchTrack : String -> Track -> Task Never (WebData (Maybe Track))
searchTrack token ({ id, artist, title } as track) =
    Track id title artist
        |> Just
        |> Success
        |> Task.succeed


createPlaylist : String -> String -> String -> Task.Task Never (WebData Playlist)
createPlaylist _ _ _ =
    Task.succeed <| Success { id = "5", name = "New Playlist", tracksCount = 5, songs = NotAsked, link = "http://myplaylist" }


getPlaylists : String -> Task Never (WebData (List Playlist))
getPlaylists _ =
    [ { id = "1", name = "Favorites", tracksCount = 5, songs = NotAsked, link = "http://myplaylist" }
    , { id = "2", name = "Fiesta", tracksCount = 5, songs = NotAsked, link = "http://myplaylist" }
    , { id = "3", name = "Au calme", tracksCount = 5, songs = NotAsked, link = "http://myplaylist" }
    , { id = "4", name = "Chouchou", tracksCount = 5, songs = NotAsked, link = "http://myplaylist" }
    ]
        |> Success
        |> Task.succeed


getPlaylistTracks : String -> String -> Task Never (WebData (List Track))
getPlaylistTracks _ _ =
    [ { id = "1", artist = "Johnny Halliday", title = "Allmuer le feu" }
    , { id = "2", artist = "Serge Gainsbourg", title = "Petit" }
    , { id = "3", artist = "The Beatles", title = "Yellow Submarine" }
    , { id = "4", artist = "Iron Maiden", title = "666" }
    , { id = "5", artist = "Mickael Jackson", title = "Beat it" }
    , { id = "6", artist = "RHCP", title = "Californication" }
    , { id = "7", artist = "The Clash", title = "London Calling" }
    , { id = "8", artist = "The Tiger Lillies", title = "Terrible" }
    ]
        |> Success
        |> Task.succeed


addSongsToPlaylist : String -> List Track -> PlaylistId -> Task Never (WebData ())
addSongsToPlaylist _ _ _ =
    Task.succeed <| Success ()


importPlaylist : String -> String -> List Track -> String -> Task Never (WebData Playlist)
importPlaylist _ _ songs name =
    Playlist "1" name NotAsked "http://myplaylist" 5
        |> Success
        |> Task.succeed


port connectDeezer : () -> Cmd msg


port disconnectDeezer : () -> Cmd msg
